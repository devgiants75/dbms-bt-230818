### 종합 문제 ###

-- 1. Customer 테이블 생성
# Customer 테이블은 다음의 컬럼들을 포함해야 합니다:

# customer_id: 고객의 고유번호입니다. 
# 정수 데이터 타입을 사용하세요. 이 컬럼은 테이블의 기본 키이어야 합니다.

# first_name: 고객의 이름입니다. 
# 최대 길이가 50인 문자열 데이터 타입을 사용하세요. 이 컬럼은 NULL 값을 허용하지 않아야 합니다.

# last_name: 고객의 성입니다. 
# 최대 길이가 50인 문자열 데이터 타입을 사용하세요. 이 컬럼은 NULL 값을 허용하지 않아야 합니다.

# email: 고객의 이메일 주소입니다. 
# 최대 길이가 100인 문자열 데이터 타입을 사용하세요. 이 컬럼은 고객의 이메일 주소가 유일해야 하므로 유니크 제약 조건을 포함해야 합니다.

# phone_number: 고객의 전화번호입니다. 
# 최대 길이가 15인 문자열 데이터 타입을 사용하세요. 이 컬럼은 기본값이 NULL이어야 합니다.

-- 2. Order 테이블 생성

# order_id: 주문의 고유번호입니다. 
# 정수 데이터 타입을 사용하세요. 이 컬럼은 테이블의 기본 키이어야 합니다.
# customer_id: 주문을 생성한 고객의 고유번호입니다. 
# 정수 데이터 타입을 사용하세요. 이 컬럼은 NULL 값을 허용하지 않아야 합니다.
# order_date: 주문이 생성된 날짜입니다. 
# 날짜 데이터 타입을 사용하세요.
# total_amount: 주문의 총 금액입니다. 
# 10자리의 정수 부분과 2자리의 소수 부분을 가진 십진수 데이터 타입을 사용하세요.

# 또한, customer_id 컬럼은 Customer 테이블의 customer_id 컬럼을 참조해야 하므로 
# 외래 키 제약 조건을 포함해야 합니다.

# 3. 각각의 테이블에 데이터 입력

# 4. Customer 테이블에서 customer_id가 2인 고객의 
# 		email을 janedoe2023@example.com으로 수정하세요.

# 5. Customer 테이블에서 customer_id가 1인 고객을 삭제하세요. 
#		그 후 Order 테이블에서 어떤 변화가 있는지 확인하세요.

# 6. Customer 테이블과 Order 테이블을 조인하여, 
# 		모든 고객의 이름과 그들의 주문 총액을 출력하세요

# 7. Order 테이블에 total_amount가 
# 		100.00 이상인 주문을 모두 조회하세요.

# 8. 트리거를 작성 
#		Order 테이블에 새로운 주문이 추가될 때마다, 
#		해당 주문의 total_amount가 100.00 이상이면, 
#		Customer 테이블의 해당 customer_id의 phone_number를 
#		NULL로 변경하세요. 
# 		그 후 트리거를 테스트하여 정상 작동하는지 확인

# 9. 위에서 작성한 트리거를 삭제하세요.